#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
plot <- ggplot(data=results, aes(x=type, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
exp2$negation <- ifelse(exp2$phrase == "does not wug.", "negative", "positive")
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB"| exp2$condition == "notAnotB"
| exp2$condition == "notAB", "simple", "quantificational")
exp2$CB <- ifelse(exp2$button_pressed == 0, 0, 1)
results <- ddply(exp2, .(cond, negation, type), negation), summarize, M = mean(CB, na.rm =TRUE))
### plotting
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~type)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
exp2$cond
View(data)
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB"| exp2$condition == "notAnotB"
| exp2$condition == "notAB", "simple", "quantificational")
exp2$CB <- ifelse(exp2$button_pressed == 0, 0, 1)
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation), negation), summarize, M = mean(CB, na.rm =TRUE))
### plotting
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
results
View(exp2)
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB"| exp2$condition == "notAnotB"
| exp2$condition == "notAB", "simple", "quantificational")
exp2$CB <- ifelse(exp2$button_pressed == 0, 0, 1)
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation), negation), summarize, M = mean(CB, na.rm =TRUE))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb")))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB"| exp2$condition == "notAnotB"
| exp2$condition == "notAB", "simple", "quantificational")
exp2$CB <- ifelse(exp2$button_pressed == 0, 0, 1)
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation), summarize, M = mean(CB, na.rm =TRUE))
results
plot <- ggplot(data=results, aes(x=type, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
results <- ddply(exp, .(cond, negation), summarize, M = mean(vis_pic, na.rm =TRUE))
### plotting
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of visible picture choices")
exp2$vis_pic <- ifelse(exp2$button_pressed == 0, 1, 0)
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation), summarize, M = mean(vis_pic, na.rm =TRUE))
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of visible picture choices")
# This script loads the data
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
head(data)
exp2 <- subset(data, type == "testing")
is.numeric(exp2$button_pressed)
levels(exp2$condition)
levels(exp2$phrase)
exp2$negation <- ifelse(exp2$phrase == "does not wug." | exp2$phrase == "does not move freom red upward." , "negative", "positive")
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$vis_pic <- ifelse(exp2$button_pressed == 0, 1, 0)
is.numeric(exp2$CB)
exp3 <- subset(exp2, rt< 9000 & rt> 500)
boxplot(exp3$rt)
exp_qua <- subset(exp3, type == "quantificational")
exp <- subset(exp3, type == "simple")
results <- ddply(exp, .(cond, negation), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, negation), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
levels(exp2$group)
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())
+facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
levels(exp2$phrase)
exp2$negation <- ifelse((exp2$phrase == "does not wug." | exp2$phrase == "does not move from red upward.") , "negative", "positive")
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$vis_pic <- ifelse(exp2$button_pressed == 0, 1, 0)
is.numeric(exp2$CB)
exp3 <- subset(exp2, rt< 9000 & rt> 500)
boxplot(exp3$rt)
exp_qua <- subset(exp3, type == "quantificational")
exp <- subset(exp3, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, negation), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
### plotting
plot <- ggplot(data=results, aes(x=cond, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
plot <- ggplot(data=results, aes(x=group, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot <- ggplot(data=results, aes(x=group, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
plot <- ggplot(data=results, aes(x=group, y=M, fill = negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of visible picture choices")
results_qua <- ddply(exp_qua, .(condition, negation, group), summarize, M = mean(button_pressed, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
plot <- ggplot(data=results_qua, aes(x=group, y=M)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~condition)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of CB choices")
results_qua <- ddply(exp_qua, .(condition, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
plot <- ggplot(data=results_qua, aes(x=group, y=M)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~condition)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot +   labs(title="",
x="", y = "rate of visible picture choices")
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
View(results)
level(results$cond)
levels(results$cond)
results$cond <- as.factor(results$cond)
levels(results$cond)
reorder(cond, "upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red")
reorder(results$cond, "upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red")
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- relevel(results$cond, ref = "upward-from red")
levels(results$cond)
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- factor(results$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
levels(results$cond)
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
View(results_pred)
results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
plot_m <- ggplot(data=results, aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m1 +   labs(title="no training group",
x="cond", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m1 +   labs(title="'no training'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'no training'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'training: wug=red'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation", y = "mean visible picture choices")
