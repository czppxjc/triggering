exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
is.numeric(exp2$CB)
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
results <- ddply(exp, .(cond, negation, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
View(results)
level(results$cond)
levels(results$cond)
results$cond <- as.factor(results$cond)
levels(results$cond)
reorder(cond, "upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red")
reorder(results$cond, "upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red")
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- relevel(results$cond, ref = "upward-from red")
levels(results$cond)
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- factor(results$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
levels(results$cond)
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
View(results_pred)
results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot +   labs(title="Predictions under H1a and H2a",
x="", y = "predicted rate of visible picture choices")
plot_m <- ggplot(data=results, aes(x=group, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
plot_m <- ggplot(data=results, aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m +   labs(title="Results by training, animation, polarity",
x="training", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m1 +   labs(title="no training group",
x="cond", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
theme_classic(base_size = 20)
plot_m1 +   labs(title="'no training'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'no training'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'training: wug=red'-group",
x="animation", y = "mean visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)  # facet_wrap(~group)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation", y = "mean visible picture choices")
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
library(exactRankTests)
library(pwr)
library(psych)
library(boot)
library(rcompanion)
library(rsq)
library(tidyr)
library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
levels(exp3$condition)
levels(exp3$group)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
levels(exp3$task)
results <- ddply(exp, .(task, condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=condition, y=M, fill = group)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
levels(exp3$group)
levels(exp3$task)
expCB <- subset(exp3, task == "covered box")
expCS <- subset(exp3, task == "covered speech")
results <- ddply(expCB, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=condition, y=M, fill = group)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
plot_m2 <- ggplot(data=results, aes(x=condition, y=M, fill = group)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
exp4 <- subset(exp3, condition != "AB" & condition != "notAB")
expCB <- subset(exp4, task == "covered box")
expCS <- subset(exp4, task == "covered speech")
results <- ddply(expCB, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=condition, y=M, fill = group)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
results2 <- ddply(expCS, .(condition), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot_m3 <- ggplot(data=results2, aes(x=condition, y=M)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m3 +   labs(title="",
results2 <- ddply(expCS, .(condition), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot_m3 <- ggplot(data=results2, aes(x=condition, y=M)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m3 +   labs(title="",
x="", y = "mean visible sentence choices")
exp5 <- subset(exp4, condition != "every_weird_nored" & condition != "none_weird_nored" | condition != "every_weird_red" & condition != "every_weird_nored")
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal" | , "none", "some"
))
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal", "none", "some"
))
exp5$projection <- ifelse(exp4$condition == "all_true_existential" | exp4$condition == "none_true_existential", "existential",
ifelse(eexp4$condition == "all_true_universal" | exp4$condition == "none_true_universal", "universal",
ifelse(exp4$condition == "none_true_no_projection" | exp4$condition == "all_true_no_projection", "no projection",
ifelse(xp4$condition == "all_false" | exp4$condition == "none_false", "false", "true"))))
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection",
ifelse(exp5$condition == "all_false" | exp5$condition == "none_false", "false", "true"))))
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results <- ddply(expCB, .(projection, quantifier, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=projection, y=M, fill = quantifier)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
exp5 <- subset(exp4, condition != "every_weird_nored" & condition != "none_weird_nored" | condition != "every_weird_red" & condition != "every_weird_nored" & condition != "some_true")
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal", "none", "blubb"
))
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection",
ifelse(exp5$condition == "all_false" | exp5$condition == "none_false", "false", "blubb"))))
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results <- ddply(expCB, .(projection, quantifier, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
levels(exp5$condition)
results
exp5 <- subset(exp4, condition != "every_weird_nored" & condition != "none_weird_nored" & condition != "every_weird_red" & condition != "every_weird_nored" & condition != "some_true")
levels(exp5$condition)
exp5 <- subset(exp4, condition != "every_weird_nored" | condition != "none_weird_nored" | condition != "every_weird_red" | condition != "every_weird_nored" | condition != "some_true")
levels(exp5$condition)
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal", "none", "blubb"
))
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection",
ifelse(exp5$condition == "all_false" | exp5$condition == "none_false", "false", "blubb"))))
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results <- ddply(expCB, .(projection, quantifier, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
results
levels(exp5$condition)
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal"  exp5$condition == "none_true_no_projection", "none", "blubb"
))
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection",
ifelse(exp5$condition == "all_false" | exp5$condition == "none_false", "false", "blubb"))))
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every",
ifelse(exp5$condition == "none_true_existential" | exp5$condition == "none_false" | exp5$condition == "none_true_universal" | exp5$condition == "none_true_no_projection", "none", "blubb"
))
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection",
ifelse(exp5$condition == "all_false" | exp5$condition == "none_false", "false", "blubb"))))
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results <- ddply(expCB, .(projection, quantifier, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
levels(exp5$condition)
levels(exp5$quantifier)
levels(exp5$projection)
exp5$quantifier <- as.factor(exp5$quantifier)
exp5$projection <- as.factor(exp5$projection)
levels(exp5$quantifier)
levels(exp5$projection)
exp5$quantifier <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "all_false" | exp5$condition == "all_true_universal" | exp5$condition == "all_true_no_projection", "every", "none")
exp5$projection <- ifelse(exp5$condition == "all_true_existential" | exp5$condition == "none_true_existential", "existential",
ifelse(exp5$condition == "all_true_universal" | exp5$condition == "none_true_universal", "universal",
ifelse(exp5$condition == "none_true_no_projection" | exp5$condition == "all_true_no_projection", "no projection", "false")))
exp5$quantifier <- as.factor(exp5$quantifier)
exp5$projection <- as.factor(exp5$projection)
levels(exp5$quantifier)
levels(exp5$projection)
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results <- ddply(expCB, .(projection, quantifier, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
### plotting
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
expCB <- subset(exp5, task == "covered box")
expCS <- subset(exp5, task == "covered speech")
results2 <- ddply(expCS, .(quantifier, projection), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot_m3 <- ggplot(data=results2, aes(x=quantifier, y=M), fill = projection) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m3 +   labs(title="",
x="", y = "mean visible sentence choices")
results2 <- ddply(expCS, .(quantifier, projection), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot_m3 <- ggplot(data=results2, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m3 +   labs(title="",
x="", y = "mean visible sentence choices")
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="",
x="", y = "mean visible picture choices")
plot_m2 <- ggplot(data=results, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~group)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m2 +   labs(title="covered box",
x="quantifier", y = "mean visible picture choices")
results2 <- ddply(expCS, .(quantifier, projection), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE) )
plot_m3 <- ggplot(data=results2, aes(x=quantifier, y=M, fill = projection)) +
geom_bar(stat="identity", position=position_dodge())
# facet_wrap(~task)
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
#  theme_classic(base_size = 20)
plot_m3 +   labs(title="covered speech",
x="quantifier", y = "mean visible sentence choices")
