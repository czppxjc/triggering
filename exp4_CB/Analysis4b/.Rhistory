#                   CB = mean(button_response == "CB", na.rm = T)
#                  , N = length2(button_response)
#                 , SD = sd(button_response == "CB", na.rm=T)
#                , SE = SD/sqrt(N))
results <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
#results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- factor(results$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
#plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
# geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
#facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
# theme_classic(base_size = 20)
#plot +   labs(title="Predictions under H1a and H2a",
#                  x="", y = "predicted rate of visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
data2 <- subset(data, group == "no training")
data1 <- subset(data, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
length(unique(data2$subjectId))
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
detach("package:dplyr", unload = TRUE)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
detach("package:tidyr", unload = TRUE)
library(tidyverse)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
library(tidyverse)
library(lme4)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
library(dplyr)
detach("package:dplyr", unload = TRUE)
detach("package:plyr", unload = TRUE)
library(dplyr)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
# Reproduce figure 3 (more or less):
data_exp1 %>%
group_by(subjectId,condition,phrase) %>%
summarize(meanCB = mean(CB)) %>%
group_by(condition,phrase) %>%
summarize(seCB = se(meanCB),meanCB=mean(meanCB)) %>%
ggplot(aes(x=condition,y=meanCB,ymin=meanCB-seCB,ymax=meanCB+seCB,fill=phrase)) +
geom_bar(stat="identity",position=position_dodge())+
geom_errorbar(width=.2,position=position_dodge(.9))+
theme_bw()+
scale_y_continuous(limits = c(0,1),name="rate of CB")+
scale_x_discrete(labels=sub(", ",",\n",levels(data_exp1$condition)))+
scale_fill_manual(values=c(rgb(1,0.8,0),rgb(0.3,0,1)))
# Try to reproduce the model comparison:
contrasts(data_exp1$condition) <- contr.poly(4)
contrasts(data_exp1$phrase) <- contr.poly(2)
model1 <- glmer(CB~condition*phrase+(phrase|subjectId),data=data_exp1,family=binomial())
model1_no_interaction <- update(model1,.~.-condition:phrase)
summary(model1)
anova(model1_no_interaction,model1)
# Let's put all this together and define possible interpretations for 'wug'
interpretation_data <- data_exp1 %>%
mutate(condition=gsub(" |,","",sub("upward","A",sub(" from red","B",condition)))) %>%
group_by(subjectId,condition,phrase) %>%
summarize(meanCB = mean(CB)) %>%
ungroup() %>%
pivot_wider(id_cols = c(subjectId),names_from = c(phrase,condition),values_from = meanCB)
library(tidyr)
# Let's put all this together and define possible interpretations for 'wug'
interpretation_data <- data_exp1 %>%
mutate(condition=gsub(" |,","",sub("upward","A",sub(" from red","B",condition)))) %>%
group_by(subjectId,condition,phrase) %>%
summarize(meanCB = mean(CB)) %>%
ungroup() %>%
pivot_wider(id_cols = c(subjectId),names_from = c(phrase,condition),values_from = meanCB)
interpretation_data <- interpretation_data %>%
mutate(
interpretation=case_when(
affirmative_AnotB==1&negative_AnotB==0&affirmative_notAB==1&negative_notAB==0 ~ "A&B",
affirmative_AnotB==0&negative_AnotB==1&affirmative_notAB==1&negative_notAB==0 ~ "A",
affirmative_AnotB==1&negative_AnotB==0&affirmative_notAB==0&negative_notAB==1 ~ "B",
affirmative_AnotB==1&negative_AnotB==1&affirmative_notAB==1&negative_notAB==0 ~ "A_B",
affirmative_AnotB==1&negative_AnotB==0&affirmative_notAB==1&negative_notAB==1 ~ "B_A",
T ~ "other"
),
errors = 2*((1-negative_AB)+(affirmative_AB)+(negative_notAnotB)+(1-affirmative_notAnotB))
)
table(interpretation_data$interpretation)
table(interpretation_data$interpretation,interpretation_data$errors)
# A different way to look at this data: check sum of affirmative and negative to see deviation from binary truth-conditions:
individual_data <- data_exp1 %>%
mutate(condition=gsub(" |,","",sub("upward","A",sub(" from red","B",condition)))) %>%
group_by(subjectId,condition,phrase) %>%
summarize(meanCB = mean(CB)) %>%
ungroup() %>%
pivot_wider(id_cols = c(subjectId,condition),names_from = c(phrase),values_from = meanCB)
# Look at individual participants' CB choices for negative ~ affirmative:
# Presupposition failures manifest themselves as dots in the top-right corner
individual_data %>%
ggplot(aes(x=affirmative,y=negative))+
facet_wrap(.~condition)+
geom_jitter(color=rgb(0,0,1,.4),width=.05,height=.05)+
geom_abline(slope=-1,intercept = 1,linetype=2)+
theme_bw()
individual_data %>%
group_by(condition) %>%
summarize(deviation=mean(negative+affirmative-1),se_dev=se(negative+affirmative-1))
table(interpretation_data$interpretation)
table(interpretation_data$interpretation,interpretation_data$errors)
### LOAD PACKAGES
library(dplyr)
library(plyr)
library(ggplot2)
library(stringr)
#library(lsr)
library(lme4)
#library(lmTest)
library(lmerTest)
#library(simr)
library(emmeans)
#library(exactRankTests)
library(pwr)
#library(psych)
#library(boot)
#library(rcompanion)
library(rsq)
library(tidyr)
#library(naniar)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
#155
data2 <- subset(data, group == "no training")
data1 <- subset(data, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
length(unique(data2$subjectId))
head(data)
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
levels(exp3$condition)
levels(exp3$phrase)
levels(exp3$group)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$target <- ifelse(exp2$cond == "upward-from red" | exp2$cond == "not upward-not from red", "baseline", "target")
exp2$critical <- ifelse(exp2$cond == "upward-not from red" | exp2$cond == "not upward-not from red" | exp2$cond == "not upward-from red", "critical", "learned")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
#CB_results <- ddply(exp6, .(quantifier, projection), summarize,
#                   CB = mean(button_response == "CB", na.rm = T)
#                  , N = length2(button_response)
#                 , SD = sd(button_response == "CB", na.rm=T)
#                , SE = SD/sqrt(N))
results <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results_qua <- ddply(exp_qua, .(condition, group), summarize, M = mean(button_pressed==0, na.rm =TRUE), RT = mean(rt, na.rm =TRUE))
#results_pred = read.csv(file=file.choose(),sep = ';',header = T,na.strings=c("","NA"))
results$cond <- as.factor(results$cond)
levels(results$cond)
results$cond <- factor(results$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
### plotting
##write.table(results, file = "results.txt", sep = ",", quote = FALSE, row.names = F)
#plot <- ggplot(data=subset(results_pred, exp == "predicted")) +
# geom_bar(aes(x=group, y=M, fill = negation), stat="identity", position="dodge", width = 0.8, color = "black")+
#facet_wrap(~cond)+
#+geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
#               position=position_dodge(.9))+
# theme_classic(base_size = 20)
#plot +   labs(title="Predictions under H1a and H2a",
#                  x="", y = "predicted rate of visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
plot_m1a <- ggplot(data=subset(results, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
View(data)
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
results <- ddply(exp, .(cond, negation, group, subjectId),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
exp2$correct <- ifelse((exp2$cond == "AB" & exp2$phrase == "wugs." & exp2$button_response == "target") |
(exp2$cond == "AB" & exp2$phrase == "does not wug." & exp2$button_response == "CB"), 1, 0 )
View(exp2)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_response == "target") |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_response == "CB"), 1, 0 )
View(exp2)
View(data)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 0) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp1, .(subjectId), summarize,
M = mean(correct, na.rm = T))
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
View(correct_resp)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 1) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 0), 1, 0 )
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 0) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
exp2b <- subset(exp2, condition == "AB")
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.90 )]
length(unattentive)
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results2, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
results2 <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1 <- ggplot(data=subset(results2, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
length(unique(exp2$subjectId))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.90 )]
length(unattentive)
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(data, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
detach("package:dplyr", unload = TRUE)
detach("package:tidyr", unload = TRUE)
library(broom)
detach("package:broom", unload = TRUE)
install.packages("conflicted")
library(conflicted)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% dplyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
