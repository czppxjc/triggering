length(unique(exp3$subjectId))
### removing participants with less than 50% correct responses to control animation AB
exp3b <- subset(exp3, condition == "AB")
exp3b$correct <- ifelse((exp3b$phrase == "wugs." & exp3b$button_pressed == 0) |
(exp3b$phrase == "does not wug." & exp3b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp3b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.5 )]
length(unattentive)
exp4 <- subset(exp3, !(subjectId %in% unattentive))
length(unique(exp4$subjectId))
exp3 <- subset(data, type == "testing")
data2 <- subset(exp3, group == "wug=red" | group == "wug=upward")
is.numeric(data2$button_pressed)
data2$negation <- ifelse((data2$phrase == "does not wug." | data2$phrase == "does not move from red upward.") , "negative", "positive")
exp3 <- subset(data2, group != "control")
length(unique(exp3$subjectId))
exp3$cond <- ifelse(exp3$condition == "AB", "upward-from red",
ifelse(exp3$condition == "notAB", "not upward-from red",
ifelse(exp3$condition == "AnotB", "upward-not from red",
ifelse(exp3$condition == "notAnotB", "not upward-not from red", "blubb"))))
### removing participants with less than 50% correct responses to control animation AB
exp3b <- subset(exp3, condition == "AB")
exp3b$correct <- ifelse((exp3b$phrase == "wugs." & exp3b$button_pressed == 0) |
(exp3b$phrase == "does not wug." & exp3b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp3b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.5 )]
length(unattentive)
exp4 <- subset(exp3, !(subjectId %in% unattentive))
length(unique(exp4$subjectId))
### conditioning
exp4$type <- ifelse(exp4$condition == "AB" | exp4$condition == "AnotB" | exp4$condition == "notAnotB" | exp4$condition == "notAB", "simple", "quantificational")
exp4$novelty <- ifelse((exp4$group == "wug=red" & (exp4$cond == "upward-from red" | exp4$cond == "upward-not from red")) |
(exp4$group == "wug=upward" & (exp4$cond == "upward-from red" | exp4$cond == "not upward-from red")) |
(exp4$group == "no training" & exp4$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp4, type == "quantificational")
exp5 <- subset(exp4, type == "simple")
exp5$cond <- as.factor(exp5$cond)
levels(exp5$cond)
exp5$cond <- factor(exp$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
### conditioning
exp4$type <- ifelse(exp4$condition == "AB" | exp4$condition == "AnotB" | exp4$condition == "notAnotB" | exp4$condition == "notAB", "simple", "quantificational")
exp4$novelty <- ifelse((exp4$group == "wug=red" & (exp4$cond == "upward-from red" | exp4$cond == "upward-not from red")) |
(exp4$group == "wug=upward" & (exp4$cond == "upward-from red" | exp4$cond == "not upward-from red")) |
(exp4$group == "no training" & exp4$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp4, type == "quantificational")
exp5 <- subset(exp4, type == "simple")
exp5$cond <- as.factor(exp5$cond)
levels(exp5$cond)
exp5$cond <- factor(exp5$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results2 <- ddply(exp5, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1a <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_m1a +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
### conditioning
exp4$type <- ifelse(exp4$condition == "AB" | exp4$condition == "AnotB" | exp4$condition == "notAnotB" | exp4$condition == "notAB", "simple", "quantificational")
exp4$novelty <- ifelse((exp4$group == "wug=red" & (exp4$cond == "upward-from red" | exp4$cond == "upward-not from red")) |
(exp4$group == "wug=upward" & (exp4$cond == "upward-from red" | exp4$cond == "not upward-from red")) |
(exp4$group == "no training" & exp4$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp4, type == "quantificational")
exp5 <- subset(exp4, type == "simple")
exp5$cond <- as.factor(exp5$cond)
levels(exp5$cond)
exp5$cond <- factor(exp5$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results3 <- ddply(exp5, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1a <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_m1a +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
plot_exp1 <- ggplot(data=results3, aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp1 <- ggplot(data=results3, aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp1 +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
plot_exp1 <- ggplot(data=results2, aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp1 +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
### conditioning
exp4$type <- ifelse(exp4$condition == "AB" | exp4$condition == "AnotB" | exp4$condition == "notAnotB" | exp4$condition == "notAB", "simple", "quantificational")
exp4$novelty <- ifelse((exp4$group == "wug=red" & (exp4$cond == "upward-from red" | exp4$cond == "upward-not from red")) |
(exp4$group == "wug=upward" & (exp4$cond == "upward-from red" | exp4$cond == "not upward-from red")) |
(exp4$group == "no training" & exp4$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp4, type == "quantificational")
exp5 <- subset(exp4, type == "simple")
exp5$cond <- as.factor(exp5$cond)
levels(exp5$cond)
exp5$cond <- factor(exp5$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results3 <- ddply(exp5, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1a <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_m1a +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
plot_exp2 <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp2 +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp2.pdf', width = 8, height = 4)
plot_exp2 <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp2 +   labs(title="group: wug = red", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp2.pdf', width = 8, height = 4)
plot_exp2b <- ggplot(data=subset(results3, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp2b +   labs(title="group: wug = upward", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp2b.pdf', width = 8, height = 4)
### LOAD PACKAGES
library(ggplot2)
library(sass)
library(stringr)
library(lme4)
library(lmerTest)
library(emmeans)
library(pwr)
library(rsq)
library(tidyverse)
library(RColorBrewer)
library(plyr)
library(knitr)
data = read.csv(file='../data/data-triggering4_CB.csv',sep = ',',header = T,na.strings=c("","NA"))
head(data)
# subsetting to critical cases
exp <- subset(data, type == "testing")
data1 <- subset(exp, group == "no training")
is.numeric(data1$button_pressed)
data1$negation <- ifelse((data1$phrase == "does not wug." | data1$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(data1, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
### removing participants with less than 50% correct responses to control animation AB
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.5 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
### conditioning
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
exp$cond <- as.factor(exp$cond)
levels(exp$cond)
exp$cond <- factor(exp$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results2 <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_exp1 <- ggplot(data=results2, aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp1 +   labs(title="", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp1.pdf', width = 8, height = 4)
## hypothesis 1
model_2a <- glmer(button_pressed ~ negation*cond + (1+negation| subjectId),
family = "binomial",
data =  exp,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_2a)
model_2b <- glmer(button_pressed ~ negation+cond + (1+negation| subjectId),
family = "binomial",
data =  exp,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_2b)
anova(model_2a, model_2b)
contrasts_2a <- emmeans(model_2a, ~negation*cond)
summary(contrast(contrasts_2a, "tukey", simple = "each", combine = TRUE, adjust="none"))
exp3 <- subset(data, type == "testing")
data2 <- subset(exp3, group == "wug=red" | group == "wug=upward")
is.numeric(data2$button_pressed)
data2$negation <- ifelse((data2$phrase == "does not wug." | data2$phrase == "does not move from red upward.") , "negative", "positive")
exp3 <- subset(data2, group != "control")
length(unique(exp3$subjectId))
exp3$cond <- ifelse(exp3$condition == "AB", "upward-from red",
ifelse(exp3$condition == "notAB", "not upward-from red",
ifelse(exp3$condition == "AnotB", "upward-not from red",
ifelse(exp3$condition == "notAnotB", "not upward-not from red", "blubb"))))
### removing participants with less than 50% correct responses to control animation AB
exp3b <- subset(exp3, condition == "AB")
exp3b$correct <- ifelse((exp3b$phrase == "wugs." & exp3b$button_pressed == 0) |
(exp3b$phrase == "does not wug." & exp3b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp3b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.5 )]
length(unattentive)
exp4 <- subset(exp3, !(subjectId %in% unattentive))
length(unique(exp4$subjectId))
### conditioning
exp4$type <- ifelse(exp4$condition == "AB" | exp4$condition == "AnotB" | exp4$condition == "notAnotB" | exp4$condition == "notAB", "simple", "quantificational")
exp4$novelty <- ifelse((exp4$group == "wug=red" & (exp4$cond == "upward-from red" | exp4$cond == "upward-not from red")) |
(exp4$group == "wug=upward" & (exp4$cond == "upward-from red" | exp4$cond == "not upward-from red")) |
(exp4$group == "no training" & exp4$cond == "upward-from red"),"given", "novel")
exp_qua <- subset(exp4, type == "quantificational")
exp5 <- subset(exp4, type == "simple")
exp5$cond <- as.factor(exp5$cond)
levels(exp5$cond)
exp5$cond <- factor(exp5$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results3 <- ddply(exp5, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_exp2 <- ggplot(data=subset(results3, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp2 +   labs(title="group: wug = red", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp2.pdf', width = 8, height = 4)
plot_exp2b <- ggplot(data=subset(results3, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_exp2b +   labs(title="group: wug = upward", fill="sentence polarity",
x="", y = "rate of CB choices")
ggsave('../figures/plot_exp2b.pdf', width = 8, height = 4)
model_0 <- glmer(button_pressed ~ novelty*cond + (1+cond| subjectId),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_0)
model_0 <- glmer(button_pressed ~ novelty*cond + (1| subjectId),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_0)
model_0b <- glmer(button_pressed ~ novelty+cond + (1| subjectId),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_0b)
anova(model_0, model_0b)
model_1a <- glmer(button_pressed ~ cond*negation*group + (1| subjectId),
family = "binomial",
data =  subset(exp, (group == "wug=red" | group == "wug=upward") & critical == "critical"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
model_1a <- glmer(button_pressed ~ cond*negation*group + (1| subjectId),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_1a)
model_1a <- glmer(button_pressed ~ cond*negation*group + (1| id),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_1a)
model_1b <- glmer(button_pressed ~ cond+negation+group + (1| id),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_1b)
anova(model_1a, model_1b)
model_1b <- glmer(button_pressed ~ cond*negation+group + (1| id),
family = "binomial",
data =  exp5,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_1b)
anova(model_1a, model_1b)
model_i <- glmer(button_pressed ~ negation*cond + (1+negation | subjectId),
family = "binomial",
data =  subset(exp5, group == "wug=red"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_i)
model_i <- glmer(button_pressed ~ negation*cond + (1| subjectId),
family = "binomial",
data =  subset(exp5, group == "wug=red"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_i)
model_i <- glmer(button_pressed ~ negation*cond + (1| id),
family = "binomial",
data =  subset(exp5, group == "wug=red"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_i)
model_ii <- glmer(button_pressed ~ negation+cond + (1| id),
family = "binomial",
data =  subset(exp5, group == "wug=red"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_ii)
anova(model_i, model_ii)
contrasts_i <- emmeans(model_i, ~negation*cond)
summary(contrast(contrasts_i, "tukey", simple = "each", combine = TRUE, adjust="none"))
model_iii <- glmer(button_pressed ~ negation*cond + (1| id),
family = "binomial",
data =  subset(exp5, group == "wug=upward"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_iii)
model_iv <- glmer(button_pressed ~ negation+cond + (1| id),
family = "binomial",
data =  subset(exp5, group == "wug=upward"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_iv)
anova(model_iii, model_iv)
contrasts_iii <- emmeans(model_iii, ~negation*cond)
summary(contrast(contrasts_i, "tukey", simple = "each", combine = TRUE, adjust="none"))
summary(contrast(contrasts_iii, "tukey", simple = "each", combine = TRUE, adjust="none"))
### LOAD PACKAGES
library(ggplot2)
library(sass)
library(stringr)
library(lme4)
library(lmerTest)
library(emmeans)
library(pwr)
library(rsq)
library(tidyverse)
library(RColorBrewer)
library(plyr)
library(knitr)
options(knitr.duplicate.label = "allow")
model_i <- glmer(button_pressed ~ negation*cond + (1| id),
family = "binomial",
data =  subset(exp5, group == "wug=red"),
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(model_i)
data3 = read.csv(file='../data/data-triggering6b.csv',sep = ',',header = T,na.strings=c("","NA"))
head(data3)
data3 = read.csv(file='../data/data-triggering6b.csv',sep = ',',header = T,na.strings=c("","NA"))
head(data3)
data3 <- subset(data3, trial_type == "survey-likert")
length(unique(data3$subjectId))
data3 = read.csv(file='../data/data-triggering6b.csv',sep = ',',header = T,na.strings=c("","NA"))
head(data3)
data3 <- subset(data3, trial_type == "survey-likert")
length(unique(data3$subjectId))
data4 <- subset(data3, condition == "AB" | condition == "notAB")
data4$correct <- ifelse((data4$condition == "AB" & data4$phrase == "wugs." & data4$button_response == "target") |
(data4$condition == "AB" & data4$phrase == "does not wug." & data4$button_response == "CB") |
(data4$condition == "notAB" & data4$phrase == "does not wug." & data4$button_response == "target") |
(data4$condition == "notAB" & data4$phrase == "wugs." & data4$button_response == "CB"), 1, 0 )
correct_resp <- ddply(data4, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
correct_resp3 <- ddply(data4, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive3 = correct_resp$subjectId[which(correct_resp3$M < 0.50 )]
length(unattentive3)
data5 <- subset(data3, !(subjectId %in% unattentive3))
length(unique(data5$subjectId))
data6 <-subset(data5, exp2$clicks != 0)
length(unique(data6$subjectId))
data6 <-subset(data5, data5$clicks != 0)
length(unique(data6$subjectId))
data7 <- subset(data6, condition != "AB" & condition != "notAB" & condition != "every_weird_nored" & condition != "none_weird_nored" & condition != "every_weird_red" & condition != "none_weird_red")
levels(data7$condition)
data7$condition <- as.factor(data7$condition)
levels(data7$condition)
