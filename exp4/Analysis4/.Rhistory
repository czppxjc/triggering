#               position=position_dodge(.9))+
# theme_classic(base_size = 20)
#plot +   labs(title="Predictions under H1a and H2a",
#                  x="", y = "predicted rate of visible picture choices")
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
plot_m1a <- ggplot(data=subset(results, group == "wug=red"), aes(x=cond, y=M, fill=negation)) +
coord_cartesian(ylim = c(0, 1))+
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 25)+
scale_x_discrete(name = "animation type",
breaks = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"),
labels = c("upward\nfrom red", "not upward\nfrom red", "upward\nnot from red", "not upward\nnot from red"))+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
theme(legend.position="top")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
View(data)
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
results <- ddply(exp, .(cond, negation, group, subjectId),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
exp2$correct <- ifelse((exp2$cond == "AB" & exp2$phrase == "wugs." & exp2$button_response == "target") |
(exp2$cond == "AB" & exp2$phrase == "does not wug." & exp2$button_response == "CB"), 1, 0 )
View(exp2)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_response == "target") |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_response == "CB"), 1, 0 )
View(exp2)
View(data)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 0) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp1, .(subjectId), summarize,
M = mean(correct, na.rm = T))
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
View(correct_resp)
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 1) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 0), 1, 0 )
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
exp2$correct <- ifelse((exp2$condition == "AB" & exp2$phrase == "wugs." & exp2$button_pressed == 0) |
(exp2$condition == "AB" & exp2$phrase == "does not wug." & exp2$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2, .(subjectId), summarize,
M = mean(correct, na.rm = T))
exp2b <- subset(exp2, condition == "AB")
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.90 )]
length(unattentive)
plot_m1 <- ggplot(data=subset(results, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results2, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
results2 <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1 <- ggplot(data=subset(results2, group == "wug=upward"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 20)+
geom_errorbar(aes(ymin=M-SE, ymax=M+SE), width=.2,
position=position_dodge(.9))
plot_m1 +   labs(title="'training: wug=upward'-group",
x="animation type", y = "rate CB choices")
length(unique(exp2$subjectId))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.90 )]
length(unattentive)
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(data, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>%
plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
detach("package:dplyr", unload = TRUE)
detach("package:tidyr", unload = TRUE)
library(broom)
detach("package:broom", unload = TRUE)
install.packages("conflicted")
library(conflicted)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% dplyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% plyr::rename(CB = button_pressed)
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
library(tidyverse)
library(lme4)
se <- function(x, ...) sqrt(var(x, ...)/length(x))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
conflict_prefer("rename", "plyr")
data_exp1 <- data %>%
filter(group=="no training" & type=="testing" & grepl("A|B",condition)) %>%
select(-c(trial_type,internal_node_id,group,view_history,stimulus,type)) %>%
mutate(
phrase=factor(if_else(phrase=="wugs.","affirmative","negative"),levels=c("negative","affirmative")),
condition=sub("  "," ",trimws(sub("B"," from red",sub("A"," upward, ",condition)))),
condition=factor(condition,levels=c("upward, from red", "not upward, from red","upward, not from red","not upward, not from red"))
) %>% rename(CB = button_pressed)
### LOAD PACKAGES
library(ggplot2)
library(stringr)
library(lme4)
library(lmerTest)
library(emmeans)
library(pwr)
library(rsq)
library(tidyverse)
library(RColorBrewer)
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
length(unique(data$subjectId))
# data1 is experiment 1, data2 is experiment 2
data1 <- subset(data, group == "no training")
data2 <- subset(data, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
length(unique(data2$subjectId))
head(data)
# subsetting to critical cases
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
### removing participants
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
library(plyr)
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
length(unique(data1$subjectId))
length(unique(data2$subjectId))
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
length(unique(exp2$subjectId))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
# data1 is experiment 1, data2 is experiment 2
data1 <- subset(data, group == "no training")
data2 <- subset(data, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
#49
length(unique(data2$subjectId))
head(data)
# subsetting to critical cases
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
data = read.csv(file=file.choose(),sep = ',',header = T,na.strings=c("","NA"))
head(data)
# subsetting to critical cases
exp3 <- subset(data, type == "testing")
is.numeric(exp3$button_pressed)
exp3$negation <- ifelse((exp3$phrase == "does not wug." | exp3$phrase == "does not move from red upward.") , "negative", "positive")
exp2 <- subset(exp3, group != "control")
length(unique(exp2$subjectId))
exp2$cond <- ifelse(exp2$condition == "AB", "upward-from red",
ifelse(exp2$condition == "notAB", "not upward-from red",
ifelse(exp2$condition == "AnotB", "upward-not from red",
ifelse(exp2$condition == "notAnotB", "not upward-not from red", "blubb"))))
### removing participants with less than 50% correct responses to control animation AB
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 0.50 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
# data1 is experiment 1, data2 is experiment 2
data1 <- subset(exp2, group == "no training")
data2 <- subset(exp2, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
#49
length(unique(data2$subjectId))
#73
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
exp2$animA <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB", "A", "not A")
exp2$animB <- ifelse(exp2$condition == "AB" | exp2$condition == "notAB", "B", "not B")
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
exp$cond <- as.factor(exp$cond)
levels(exp$cond)
exp$animA <- as.factor(exp$animA)
levels(exp$animA)
exp$animB <- as.factor(exp$animB)
levels(exp$animB)
exp$cond <- factor(exp$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results <- ddply(exp, .(cond, negation, group, subjectId),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results2 <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results3 <- ddply(exp, .(animA, animB, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
plot_m1 <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_all <- ggplot(data=subset(results, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)
plot_all +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_all <- ggplot(data=subset(results2, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)
plot_all +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
results
## by participant
plot_m1 <- ggplot(data=subset(results, group == "no training" & cond != "not upward-no from red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
plot_m1 <- ggplot(data=subset(results, group == "no training" & cond != "not upward-no from red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)
#+
#  facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
## by participant
plot_m1 <- ggplot(data=subset(results, group == "no training" & cond != "not upward-not from red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)
#+
#  facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
## by participant
plot_m1 <- ggplot(data=subset(results, group == "no training" & cond != "not upward-not from red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
exp2b <- subset(exp2, condition == "AB")
exp2b$correct <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$condition == "AB" & exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
correct_resp
exp2b$correct2 <- ifelse((exp2b$condition == "AB" & exp2b$phrase == "wugs." & exp2b$button_pressed == 0), 1, 0 )
correct_resp_pos <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct2, na.rm = T))
correct_resp_pos
exp2b$correct2 <- ifelse((exp2b$phrase == "wugs." & exp2b$button_pressed == 0), 1, 0 )
correct_resp_pos <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct2, na.rm = T))
correct_resp_pos
View(exp2b)
exp2b$correct <- ifelse((exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
correct_resp
exp2b$correct <- ifelse((exp2b$phrase == "wugs." & exp2b$button_pressed == 0) |
(exp2b$phrase == "does not wug." & exp2b$button_pressed == 1), 1, 0 )
correct_resp <- ddply(exp2b, .(subjectId), summarize,
M = mean(correct, na.rm = T))
unattentive = correct_resp$subjectId[which(correct_resp$M < 1 )]
length(unattentive)
exp2 <- subset(exp2, !(subjectId %in% unattentive))
length(unique(exp2$subjectId))
# data1 is experiment 1, data2 is experiment 2
data1 <- subset(exp2, group == "no training")
data2 <- subset(exp2, group == "wug=red" | group == "wug=upward")
length(unique(data1$subjectId))
length(unique(data2$subjectId))
exp2$type <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB" | exp2$condition == "notAnotB" | exp2$condition == "notAB", "simple", "quantificational")
exp2$novelty <- ifelse((exp2$group == "wug=red" & (exp2$cond == "upward-from red" | exp2$cond == "upward-not from red")) |
(exp2$group == "wug=upward" & (exp2$cond == "upward-from red" | exp2$cond == "not upward-from red")) |
(exp2$group == "no training" & exp2$cond == "upward-from red"),"given", "novel")
exp2$animA <- ifelse(exp2$condition == "AB" | exp2$condition == "AnotB", "A", "not A")
exp2$animB <- ifelse(exp2$condition == "AB" | exp2$condition == "notAB", "B", "not B")
exp_qua <- subset(exp2, type == "quantificational")
exp <- subset(exp2, type == "simple")
exp$cond <- as.factor(exp$cond)
levels(exp$cond)
exp$animA <- as.factor(exp$animA)
levels(exp$animA)
exp$animB <- as.factor(exp$animB)
levels(exp$animB)
exp$cond <- factor(exp$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
#results_pred$cond <- factor(results_pred$cond, levels = c("upward-from red", "not upward-from red", "upward-not from red", "not upward-not from red"))
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
results <- ddply(exp, .(cond, negation, group, subjectId),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results2 <- ddply(exp, .(cond, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
results3 <- ddply(exp, .(animA, animB, negation, group),
summarize, M = mean(button_pressed==1, na.rm =TRUE),
N = length2(button_pressed),
SD = sd(button_pressed == 1, na.rm=T),
SE = SD/sqrt(N),
RT = mean(rt, na.rm =TRUE) )
### plotting
plot_all <- ggplot(data=subset(results2, group == "no training"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)
plot_all +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
## by participant
plot_m1 <- ggplot(data=subset(results, group == "no training" & cond != "not upward-not from red"), aes(x=cond, y=M, fill=negation)) +
geom_bar(stat="identity", position=position_dodge())+
theme_classic(base_size = 12)+
facet_wrap(~subjectId)
plot_m1 +   labs(title="neutral training group",
x="animation type", y = "rate CB choices")
library(knitr)
